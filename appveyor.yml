version: '{branch}-{build}'
# we can't use shallow_clone to fetch a zip archive instead of git clone
# becuse we need the git clone to run in order to have a git repo that coveralls can look at.
clone_depth: 10
build: off
cache:
  - '%LOCALAPPDATA%\pip\Cache'
environment:
  COVERALLS_REPO_TOKEN:
    secure: lFyaxdbvCvXKM+PjmN9FToU8DhsdS474RgaW/bNAu4IBnn7QbfZzDYrjKw33V6Oo
  global:
    # lxml will not build appropriately from source on Windows without the
    # appropriate libxml headers. As a result, make pip use binary packages.
    PIP_ONLY_BINARY: lxml
  matrix:
    - TOXENV: 'py37-notebook60'
      TOXPYTHON: C:\Python36\python.exe
      PYTHON_HOME: C:\Python37
      PYTHON_VERSION: '3.7'
      PYTHON_ARCH: '64'

    - TOXENV: 'py38-notebook60'
      TOXPYTHON: C:\Python38\python.exe
      PYTHON_HOME: C:\Python38
      PYTHON_VERSION: '3.8'
      PYTHON_ARCH: '64'

init:
  - ps: echo $env:TOXENV
  - ps: ls C:\Python*
install:
  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside a powershell script as it would require us to restart the
  # parent CMD process).
  - "SET PATH=%PYTHON_HOME%;%PYTHON_HOME%\\Scripts;%PATH%"
  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""
  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - 'python -m pip install --disable-pip-version-check --user --upgrade pip'
  # install tox
  - pip install tox
  # install of the actual project is handled by tox in tests
test_script:
  # run tox tests
  - '%PYTHON_HOME%\Scripts\tox -e %TOXENV%'

on_success:
  - cmd: '%PYTHON_HOME%\Scripts\tox -e codecov || (echo "codecov failed :(" && cmd /c "exit /b 0")'
on_failure:
  - ps: $($env:COVERALLS_REPO_TOKEN = '')
  - ps: dir "env:"
  - ps: get-content .tox\*\log\*
artifacts:
  - path: .coverage
  - path: dist\*

### To enable remote debugging uncomment this (also, see: http://www.appveyor.com/docs/how-to/rdp-to-build-worker):
# on_finish:
#   - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
